# Continuous Integration Workflow, will build applications, publish artifacts and deploy to Azure
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: 
  push:
    branches:
      - main
    paths:
      - '.github/workflows/azure.yml'
      - 'src/**'

env:
  FIRST_LOCATION: "eastus"
  PREFIX: "hamrwa"
  AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
  
      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload Region Templates
        id: templateupload
        uses: azure/CLI@v1
        with:
          inlineScript: |
            name='${{env.PREFIX}}.region.deploy.json'
            az storage blob upload --container-name templates --file src/templates/region.deploy.json --name $name
            end=$(date -u -d "6 hours" '+%Y-%m-%dT%H:%MZ')
            echo "Token will expire on $end"
            uri=$(az storage blob generate-sas --container-name templates --name $name --permissions r --expiry $end --https-only -o tsv)
            echo "::set-output name=templateuri::$uri"

      - name: Verify output
        run: echo ${{ steps.templateupload.outputs.sastoken }}

      # - name: Deploy ARM Template
      #   id: arm
      #   uses: azure/arm-deploy@v1
      #   with:
      #     subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     resourceGroupName: ${{ env.RESOURCE_GROUP }}
      #     template: artifacts/arm_template/azuredeploy.json
      #     parameters: cloudmersiveVirusScanApiKey=${{ secrets.CLOUDMERSIVEVIRUSSCANAPIKEY }}
